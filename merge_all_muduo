{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2c0e6773-696b-422c-acc0-ce54612c4c76",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from Read_tfidf_Muduo import t_tfidf_dense"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dfa5a092-97d1-426b-bc12-5458e81aace5",
   "metadata": {},
   "outputs": [],
   "source": [
    "tfidf = t_tfidf_dense"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a13645f9-71a7-403e-b608-1811108f8b73",
   "metadata": {},
   "outputs": [],
   "source": [
    "amc_minutely = pd.read_csv(\"./stocks/amc_1min.csv.zip\")\n",
    "amc_minutely=amc_minutely.sort_values(\"time\").reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cbac9a9a-d8b7-49ff-933a-e36e774d18fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "import datetime as dt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "e27d8d3c-90f3-44cf-bb34-3a031978dd4f",
   "metadata": {},
   "outputs": [],
   "source": [
    "times = []\n",
    "times.append(dt.datetime(2019, 7, 24, 9, 29))\n",
    "for day in range(1,356):\n",
    "    for minute in range(1,1440):\n",
    "        times.append(dt.datetime(2019, 7, 24, 9, 29) + dt.timedelta(0,60)*(minute)+dt.timedelta(1)*(day))\n",
    "        \n",
    "df_times_col = pd.DataFrame(times)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "e54b1147-34e4-4cc9-a9f3-dabfb391b946",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Messing with columns and data types\n",
    "df_times_col.columns = [\"time\"]\n",
    "df_times_col = df_times_col.set_index([\"time\"])\n",
    "amc_minutely.time = pd.to_datetime(amc_minutely.time)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "53410fa0-32a3-41e6-8254-d443546bbaba",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_minutely = pd.merge(df_times_col,amc_minutely, on=\"time\", how=\"outer\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d73bfc45-27fa-4f6c-9d83-2deeab5390e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "'adding interval to time'\n",
    "# intvs = [1,2,5,10,30,60,120,360,1440]\n",
    "\n",
    "# df[f\"{intvs}m%Chg\"]\n",
    "\n",
    "# iterator = 0 # Don't over print\n",
    "\n",
    "\n",
    "# for minute in range(len(df)):\n",
    "#     iterator += 1 # Don't over print\n",
    "#     # Iterate over each comment in every minute\n",
    "#     for itv in intvs:\n",
    "#         print (df.iloc[minute+itvs].close)\n",
    "        \n",
    "#         '''Add check for night or not'''\n",
    "    \n",
    "#     if df.iloc[minute+itvs]\n",
    "    \n",
    "    \n",
    "    \n",
    "#     if iterator > 5:\n",
    "#         break\n",
    "#         # Get price 1 minute in the future\n",
    "        \n",
    "# #         print (df_by_minute.iloc[minute].features.iloc[single_comment].close) # Price @ comment time\n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "07eb70a3-a603-46a1-ba45-51776e625d9b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    " \n",
    "\n",
    "print(\"Starting tfidf....\")\n",
    "start_time = time.time()\n",
    "tfidf = TfidfVectorizer()\n",
    "tfidf_matrix = tfidf.fit_transform(tdf['tfidf'])\n",
    "\n",
    "\n",
    "print(f\"Built: {round(time.time()-start_time,2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "09859f2b-0e1f-4716-9b68-353ec2f810e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "comments = pd.read_csv(\"./ignore_folder/processed_reddit_v4_amc_1min_csv.zip\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "id": "6978b94e-4811-4ed5-a571-e08f0ab3b27b",
   "metadata": {},
   "outputs": [],
   "source": [
    "comments_df = pd.concat([comments[\"body\"], comments[\"time\"]],axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7e70dc5e-3319-4c33-b365-715f2c47e57f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Starting tfidf....\n"
     ]
    }
   ],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "import time \n",
    "\n",
    "print(\"Starting tfidf....\")\n",
    "\n",
    "start_time = time.time()\n",
    "tfidf = TfidfVectorizer()\n",
    "matrix = pd.DataFrame(tfidf.fit_transform(comments_df[\"body\"].fillna(\"None\")).todense())\n",
    "tfidf_df = pd.concat([comments_df,matrix]).drop(\"body\",axis=1)\n",
    "\n",
    "print(f\"Built: {round(time.time()-start_time,2)}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
